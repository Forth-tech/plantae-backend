// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  firstName  String
  lastName   String
  email      String      @unique
  hash       String
  hashedPass String
  UserPlant  UserPlant[]
}

model PlantType {
  ID_PlantType   String                 @id @default(uuid())
  popularNames   PlantTypePopularName[]
  scientificName String
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
  imageUrl       String?
  UserPlant      UserPlant[]
}

model PlantTypePopularName {
  ID_PlantTypePopularName String    @id @default(uuid())
  ID_PlantType            String
  PlantType               PlantType @relation(fields: [ID_PlantType], references: [ID_PlantType])
  popularName             String
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  @@unique([ID_PlantType, popularName])
}

model UserPlant {
  ID_UserPLant       String               @id @default(uuid())
  ID_User            String
  user               User                 @relation(fields: [ID_User], references: [id])
  ID_PlantType       String
  plantType          PlantType            @relation(fields: [ID_PlantType], references: [ID_PlantType])
  purchasedDate      DateTime?
  name               String
  ID_Watering        String
  watering           Watering             @relation(fields: [ID_Watering], references: [ID_Watering])
  ID_Feeding         String
  feeding            Feeding              @relation(fields: [ID_Feeding], references: [ID_Feeding])
  UserPlantNote      UserPlantNote[]
  UserPlantImage     UserPlantImage[]
  UserPlantWatering  UserPlantWatering[]
  UserPlantNutrition UserPlantNutrition[]
}

model Watering {
  ID_Watering String         @id @default(uuid())
  period      WateringPeriod
  volume      Int
  UserPlant   UserPlant[]
}

model Feeding {
  ID_Feeding String        @id @default(uuid())
  period     FeedingPeriod
  quantity   Int
  UserPlant  UserPlant[]
}

model UserPlantNote {
  ID_UserPlantNote String    @id @default(uuid())
  userPlant        UserPlant @relation(fields: [ID_UserPlant], references: [ID_UserPLant])
  ID_UserPlant     String
  note             String
  date             DateTime
}

model UserPlantImage {
  ID_UserPlantImage String    @id @default(uuid())
  userPlant         UserPlant @relation(fields: [ID_UserPlant], references: [ID_UserPLant])
  ID_UserPlant      String
  imageUrl          String
  date              DateTime  @default(now())
}

model UserPlantWatering {
  ID_UserPlantWatering String    @id @default(uuid())
  userPlant            UserPlant @relation(fields: [ID_UserPlant], references: [ID_UserPLant])
  ID_UserPlant         String
  volume               Int
  date                 DateTime
}

model UserPlantNutrition {
  ID_UserPlantNutrition String    @id @default(uuid())
  userPlant             UserPlant @relation(fields: [ID_UserPlant], references: [ID_UserPLant])
  ID_UserPlant          String
  quantity              Int
  date                  DateTime
}

enum WateringPeriod {
  DAILY
  EVERYOTHER
  WEEKLY
  BIWEEKLY
  MONTHLY
}

enum FeedingPeriod {
  WEEKLY
  BIWEEKLY
  MONTHLY
  BIMONTHLY
  TRI
}
